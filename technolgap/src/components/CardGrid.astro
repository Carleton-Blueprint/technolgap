---
import Card from "../components/Card.astro";
import type { Entry } from "contentful";

interface member {
  fields: {
    name: string;
    headshot: {
      metadata: { tags: [] };
      sys: object;
      fields: {
        title: string;
        description: string;
        file: {
          url: string;
          details: [object];
          fileName: string;
          contentType: string;
        };
      };
    };
    position: string;
    institution: string;
    linkedin2?: string;
    programYear: string;
    memberDegree: string;
    teamYearMany: [string];
    bio?: string;
  };
  contentTypeId: "teamMember";
}

type TeamMember = Entry<member>;

interface Props {
  entries: TeamMember[];
}

const { entries } = Astro.props;
---

<section class="grid overflow-auto">
  {
    entries.map((member, index) => (
      <Card
        name={member.fields.name as unknown as string}
        headshot={(member.fields.headshot?.fields as any)?.file?.url ?? ""}
        position={member.fields.position as unknown as string}
        link={(member.fields.linkedin2 as unknown as string) ?? "none"}
        studentInfo={
          member.fields.memberDegree + "\n" + member.fields.institution
        }
        bio={(member.fields.bio as unknown as string) ?? "none"}
      />
    ))
  }
</section>

<style>
  .grid {
    padding-top: 65px;
    display: grid;
    background-color: #64a8a2;
    border-radius: 20px;
    row-gap: 15px;
    grid-template-columns: repeat(auto-fill, minmax(18rem, 1fr));
    box-shadow: 0 7px 10px 1px #898989;
    border: solid 5px #fee8f5;
  }

  @media (max-width: 1200px) {
    .grid {
      grid-template-columns: repeat(3, minmax(18rem, 1fr));
    }
  }
</style>
