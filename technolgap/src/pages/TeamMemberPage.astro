---
import { createClient, Entry } from 'contentful';

const client = createClient({
  space: '33d3d7kdmbg5',
  accessToken: '00BZSByF4Gmh1S-vDtMfsmOLIdqrC8fyV404sOfIwzM',
});

const years = ['1st Year','2nd Year', '3rd Year', '4th Year'];

interface TeamMemberFields {
    
  name: string;
  headshot: { fields: { file: { url: string } } };
  position: string;
  institution: string;
  linkedin2: string;
}

type TeamMember = Entry<TeamMemberFields>;

const url = new URL(Astro.request.url);
const yearParam = url.searchParams.get('year') || 'Technolgap'; 

async function fetchTeamMembers(year: string): Promise<TeamMember[]> {
  const response = await client.getEntries({
    content_type: 'teamMember',
    'fields.programYear': year,
  });

  return response.items as TeamMember[];
}

const teamMembers = await fetchTeamMembers(yearParam);
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Team Members</title>
</head>
<body>
  <h1>Team Members for {yearParam}</h1>
  <form action={Astro.request.url} method="GET">
    <select name="year">
      {years.map((yr) => (
        <option key={yr} value={yr} selected={yr === yearParam}>{yr}</option>
      ))}
    </select>
    <button type="submit">Show Members</button>
  </form>
  <ul>
    {teamMembers.map(member => (
      <li key={member.sys.id}>
        <h2>{member.fields.name}</h2>
        {member.fields.headshot && (
          <img src={member.fields.headshot.fields.file.url} />
        )}
        <p>{member.fields.position}</p>
        <p>{member.fields.memberDegree}</p>
        <p>{member.fields.institution}</p>
        {member.fields.linkedin2 && (
          <p><a href={member.fields.linkedin2}>LinkedIn</a></p>
        )}
      </li>
    ))}
  </ul>
</body>
</html>
