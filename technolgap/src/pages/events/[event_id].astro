---
import { createClient } from "contentful";
import type { Entry } from "contentful";
import PageLayout from "../../layouts/PageLayout.astro";
import Subheading from "../../components/Subheading.astro";

const client = createClient({
  space: "33d3d7kdmbg5",
  accessToken: "00BZSByF4Gmh1S-vDtMfsmOLIdqrC8fyV404sOfIwzM",
});

// Define the event fields interface
interface EventFields {
  fields: {
    eventName: string;
    poster: {
      metadata: { tags: [] };
      sys: object;
      fields: {
        title: string;
        description: string;
        file: {
          url: string;
          details: [object];
          fileName: string;
          contentType: string;
        };
      };
    };
    date: string; // Ensure date is expected to be a string
    venue: string;
    eventType: string;
    eventSummary: string;
    time: string | undefined;
    registrationLink: string | undefined;
  };
  contentTypeId: "event";
}

type Event = Entry<EventFields>;

// Fetch the eventId from the route parameters
const { event_id } = Astro.params;

// Fetch the specific event's details using the eventId
const event = await (async () => {
  try {
    const response = await client.getEntry(event_id as string);
    return response as Event;
  } catch (err) {
    console.error("Error fetching event details:", err);
    return null;
  }
})();

---

{!event && (
  <PageLayout title="Event Not Found">
    <div class="event-page-container">
      <Subheading title="Event Not Found"/>
    </div>
  </PageLayout>
)}

{event && (
  <PageLayout title={event.fields.eventName}>
    <div class="event-page-container">

      <Subheading title={event.fields.eventName}/>
      <div class="event-container">
        <img class="event-poster" src={(event.fields.poster?.fields as any)?.file?.url} alt="Event Poster"/>

        <div class="details-container">
          <div class="details-box">
            <p class="detail"><strong>Date: </strong> {new Date(event.fields.date as unknown as string).toLocaleString("en-US", {weekday: "long", month: "long", day: "numeric", year: "numeric"}) ?? "TBA"}</p>
            <p class="detail"><strong>Time: </strong> {event.fields.time ?? "All Day"}</p>
            <p class="detail"><strong>Venue: </strong> {event.fields.venue ?? "TBA"}</p>
            <br/>
            <p class="detail">{event.fields.eventSummary}</p>
          </div>
          <div class="tags">
            <a href="/speakers" class="tag">Speaker</a>
            <a href="/collaborators" class="tag">Collaborator</a>
            <a href="/sponsors" class="tag">Sponsor</a>
          </div>
        </div>
      </div>
      <a href={event.fields.registrationLink ? event.fields.registrationLink as unknown as string : "#"} target="_blank" class="register-button button">
        {event.fields.registrationLink ? "REGISTER" : "No Registration Required"}
      </a>
    </div>
  </PageLayout>
)}


<script>
  document.querySelector("main")?.classList.add("classic-bg")
</script>

<style>

  .event-page-container {
    text-align: center; 
    padding: 1px 20px 0 20px;
  }

  .event-container > * {
    grid-column: span 1; /* Ensure each immediate child adheres to the grid layout */
  }

  .event-container {
    display: grid;
    /* grid-template-columns: repeat(2, 1fr); Example grid layout */
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); 
    gap: 2rem; /* Adjust spacing between items */
    margin: 100px auto 100px auto;
    max-width: 1100px;
  }

  .details-container {
    /* max-height: 310px; */
    height: 70%;
  }
  
  .details-box {
    height: 100%;
    border-radius: 20px;
    padding: 40px;
    background-color: #275950;
    font-weight: bold;
    text-align: left;
  }

  .detail {
    color: white;
  }

  .event-poster {
    border-radius: 20px;
    margin: 0 auto;
    border: 5px solid #ffbce5;
    box-shadow: 0px 5px 3px -2px rgba(0, 0, 0, 0.347);
  }


  .register-button {
    display: inline-block;
    margin-bottom: 100px;
  }


  .tags {
    display: flex;
    justify-content: space-evenly;
    margin-top: 20px;
  }

  .tag {
    text-decoration: none;
    background-color: #60a0a1;
    color: white;
    padding: 12px 25px;
    font-size: 16px;
    border-radius: 15px;
    font-weight: bold;
    box-shadow: 2px 4px 0px 0 #275950;
  }

  .tag:hover {
    scale: 105%;
    box-shadow: 1px 2px 0 0 #275950;
  }

  @media (max-width: 1000px) {
    .details-box {
      /* height: 90%; */
    }

    .tag {
      font-size: 14px;
      padding: 10px 15px;
    }
  }

  @media (max-width: 930px) {
    .details-box {
      padding: 20px;
    }
  }



  @media (max-width: 800px) {
    .details-box {
      font-size: 14px;
    }

    .tag {
      font-size: 12px;
      padding: 10px 12px;
    }
  }

  @media (max-width: 750px) {
    .details-box {
      padding: 15px;
      font-size: 12px;
    }

    .tags {
      justify-content: space-between;
    }
  }

  @media (max-width: 700px) {

    .details-box {
      font-size: 14px;
      padding: 30px;
    }

    .event-container {
      display: block;
    }

    .event-poster {
      margin-bottom: 30px;
      width: 90%;
    }

    .tags {
      justify-content: space-evenly;
    }

    .tag {
      padding: 12px 25px;
      font-size: 16px;
    }
  }

  @media (max-width: 550px) {
    .tag {
      font-size: 14px;
      padding: 10px 15px;
    }
  }

  @media (max-width: 450px) {
    
    .tag {
      font-size: 12px;
      padding: 10px 12px;
    }
  }

  @media (max-width: 400px) {
    .tags {
      justify-content: space-between;
    }
  }

  @media (max-width: 375px) {
    .tag {
      font-size: 11px;
      padding: 10px 8px;
    }
    .tags {
      margin-left: -10px;
      margin-right: -10px;
    }
  }
</style>
