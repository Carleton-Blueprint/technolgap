---
import { createClient } from "contentful";
import type { Entry } from "contentful";
import PageLayout from "../layouts/PageLayout.astro";

// Initialize Contentful client
const client = createClient({
  space: "33d3d7kdmbg5",
  accessToken: "00BZSByF4Gmh1S-vDtMfsmOLIdqrC8fyV404sOfIwzM",
});
const eventId = "7rqDyI4W4i7udw4h9jEINo";  // Hardcoded ID

// Define event fields interface
interface EventFields {
  fields: {
    eventName: string | undefined;
    poster: {
      metadata: { tags: [] };
      sys: object;
      fields: {
        title: string;
        description: string;
        file: {
          url: string;
          details: [object];
          fileName: string;
          contentType: string;
        };
      };
    };
    date: string | undefined;
    venue: string | undefined;
    eventType: string | undefined;
    eventSummary: string | undefined;
    time: string | undefined;
    registrationLink: string | undefined;
  };
  sys: {
    id: string;
  };
  contentTypeId: "event";
}

type Event = Entry<EventFields>;

// Fetch event by ID
async function fetchEventById(eventId: string): Promise<Event | null> {
  const response = await client.getEntries({
    content_type: "event",
    "sys.id": eventId,
  });
  return response.items.length > 0 ? response.items[0] as Event : null;
}

const event = await fetchEventById(eventId);

if (!event) {
  return (
    <PageLayout>
      <p>Error: Event not found.</p>
    </PageLayout>
  );
}

const { eventName, venue, date, eventSummary, time, registrationLink, poster } = event.fields;
---

<PageLayout>
  <h1>{eventName || "Event name not available"}</h1>

  {poster?.fields?.file?.url ? (
    <img width="100px" src={poster.fields.file.url} alt="Event Poster" />
  ) : (
    <p>No poster available</p>
  )}

  <p><strong>Location:</strong> {venue || "Location not available"}</p>
  <p><strong>Date:</strong> {date || "Date not available"}</p>
  <p><strong>Time:</strong> {time || "Time not available"}</p>
  <p><strong>About the Event:</strong> {eventSummary || "No summary available"}</p>

  {registrationLink ? (
    <p><a href={registrationLink}>Register Here</a></p>
  ) : (
    <p>No registration link available</p>
  )}
</PageLayout>

